name: CD

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # application.yml 복사
      - name: set yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > ./kotlin/src/main/resources/application.yml
          find src


      # gradle 빌드
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: gradlew bootJar
        run: |
          ./gradlew bootJar 


      # docker 빌드 & 푸쉬
      - name: Docker build & push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/docker-prod .
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-prod

      # 인스턴스1에 배포
      - name: Deploy to application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            sudo docker stop $(sudo docker ps -q)
            sudo docker rm $(sudo docker ps -a -q)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-prod
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/docker-prod
            sudo docker image prune -f
